#!/usr/bin/ruby
require 'irb/completion'
require 'irb/ext/save-history'

IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"

# IRB.conf[:PROMPT_MODE] = :SIMPLE

module CustomPrompt
  def self.apply!
    IRB.conf[:PROMPT][:PSYCHO] = {
      :PROMPT_I => "\033[0;94mruby >> \033[0;97m",
      :PROMPT_C => "\033[0;94mruby >> \033[0;97m",
      :PROMPT_S => "\033[0;94mruby ?> \033[0;97m",
      :RETURN   => "\033[1;97m=>\033[0m %.2048s\n"   
    }

    IRB.conf[:PROMPT_MODE] = :PSYCHO
  end
end

CustomPrompt.apply!



%w[rubygems looksee/shortcuts wirble awesome_print].each do |gem|
  begin
    require gem
  rescue LoadError
  end
end

class Object
  def search_methods(param)
    methods = []
    self.methods.each { |m| methods << m if m.to_s.include? param }
    return methods
  end

  def local_methods(obj = self)
    (obj.methods - obj.class.superclass.instance_methods).sort
  end

  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.kind_of?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    system 'ri', method.to_s
  end
end

def copy(str)
  IO.popen('pbcopy', 'w') { |f| f << str.to_s }
end

def copy_history
  history = Readline::HISTORY.entries
  index = history.rindex("exit") || -1
  content = history[(index+1)..-2].join("\n")
  puts content
  copy content
end

def paste
  `pbpaste`
end